/* eslint-disable no-use-before-define */
// Generated by https://quicktype.io

import { AnyNumber } from '@polkadot/types/types';

export interface Chocolate {
  User: User;
  ReviewAl: Review;
  ProjectAl: Project;
  ListOfNames: string[];
  TextAl: string;
  Project: Project;
  ProjectID: AnyNumber;
  ReviewID: AnyNumber;
  ProposalStatus: ProposalStatus;
  Status: Status['_enum'];
  Reason: Reason['_enum'];
  MetaData: MetaData;
  ProjectSocials: Social['_enum'][];
  Social: Social['_enum'];
  Review: Review;
  Balance: AnyNumber;
  BalanceOf: AnyNumber;
  ProjectWithIndex: ProjectWithIndex;
}
export interface ProjectWithIndex {
  Id: AnyNumber;
  project: Project;
}
export interface MetaData {
  projectName: string;
  projectSocials: Social['_enum'][];
  founderSocials: Social['_enum'][];
}

export interface Project {
  ownerID: string;
  reviews?: AnyNumber[];
  badge?: boolean;
  metaData: MetaData;
  proposalStatus: ProposalStatus;
}

export interface ProposalStatus {
  status: Status['_enum'];
  reason: Reason['_enum'];
}

export interface Reason {
  _enum: Partial<ReasonEnum>;
}

export interface ReasonEnum {
  Other: string;
  InsufficientMetaData: null;
  Malicious: null;
  PassedRequirements: null;
}

export interface Review {
  proposalStatus: ProposalStatus;
  userID: string;
  reviewText: string;
  projectID: AnyNumber;
}

export interface Social {
  _enum: Partial<SocialEnum>;
}
export interface SocialEnum {
  [x: string]: string;
  Twitter: string;
  Facebook: string;
  Instagram: string;
  Riot: string;
  Email: string;
  None: null;
}

export interface Status {
  _enum: 'Proposed' | 'Accepted' | 'Rejected';
}

export interface User {
  rankPoints: AnyNumber;
}
